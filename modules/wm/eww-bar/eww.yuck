(defwidget bar []
  (centerbox :class "bar"
             :orientation "h"
    (workspaces)
    window_name
    (sidestuff)))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (box
      (for tag in '${wmstate.workspaces[0].tags}'
        (button
          :class {tag.mine ? "ws-button-mine" :
                  tag.visible ? "ws-button-visible" :
                  tag.urgent ? "ws-button-urgent" :
                  tag.busy ? "ws-button-busy" : "ws-button"}
          :onclick "leftwm-command \"SendWorkspaceToTag 0 ${tag.index}\""
          {!tag.mine && !tag.busy && !tag.visible && !tag.urgent ?  "Â·" : "${tag.name}"})))))

(defwidget sidestuff []
  (box :class "sidestuff" 
       :orientation "h" 
       :space-evenly false 
       :halign "end"
       :spacing 10
    (metric :label "CPU"
            :value {EWW_CPU.avg}
            :onchange "")
    time))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))
          
(deflisten wmstate 
  :initial '{"workspaces":[{"layout":"","tags":[{"name":"","index":0,"mine":false,"busy":false,"visible":false,"urgent":false}]}]}'
  "leftwm state")

(deflisten window_name :initial ""
  "scripts/get-window-name.sh")
  
(defpoll time :interval "10s"
  "LC_TIME=en_US.UTF-8 date '+%Ww %Y/%m/%d %I:%M %P'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "23px")
  (bar))